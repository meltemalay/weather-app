{"ast":null,"code":"// formatting time and day\nfunction formatTime(date) {\n  let hours = date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return `${hours}:${minutes}`;\n}\nfunction formatDay(date) {\n  const dayArray = date.getDay();\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const day = days[dayArray];\n  return day;\n}\n// getting current time & day and displaying it\nconst currentTime = document.querySelector(\"#current-time\");\nlet newCurrentTime = new Date();\ncurrentTime.innerHTML = formatTime(newCurrentTime);\nconst currentDay = document.querySelector(\"#current-day\");\nlet newCurrentDay = new Date();\ncurrentDay.innerHTML = formatDay(newCurrentDay);\n\n// implementing search bar and api request\nfunction displayWeatherInfo(response) {\n  document.querySelector(\"#searched-city\").innerHTML = response.data.name;\n  const temperature = Math.round(response.data.main.temp);\n  document.querySelector(\"#current-temperature\").innerHTML = `${temperature}°`;\n  const humidity = response.data.main.humidity;\n  document.querySelector(\"#humidity\").innerHTML = `${humidity}%`;\n  const windSpeed = Math.round(response.data.wind.speed);\n  document.querySelector(\"#wind\").innerHTML = `${windSpeed}km/h`;\n  document.querySelector(\"#weather-type\").innerHTML = response.data.weather[0].main;\n}\nfunction searchCity(city) {\n  const apiKey = \"2b5fc755ac2ec59250868b5527df31c4\";\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric`;\n  axios.get(`${apiUrl}&appid=${apiKey}`).then(displayWeatherInfo);\n}\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let city = document.querySelector(\"#search-input\").value;\n  searchCity(city);\n}\nconst searchBar = document.querySelector(\"#search-form\");\nsearchBar.addEventListener(\"submit\", handleSubmit);","map":{"version":3,"names":["formatTime","date","hours","getHours","minutes","getMinutes","formatDay","dayArray","getDay","days","day","currentTime","document","querySelector","newCurrentTime","Date","innerHTML","currentDay","newCurrentDay","displayWeatherInfo","response","data","name","temperature","Math","round","main","temp","humidity","windSpeed","wind","speed","weather","searchCity","city","apiKey","apiUrl","axios","get","then","handleSubmit","event","preventDefault","value","searchBar","addEventListener"],"sources":["/Users/meltemalay/Desktop/web-design-development/weather-viz-template/src/index.js"],"sourcesContent":["// formatting time and day\nfunction formatTime(date) {\n  let hours = date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return `${hours}:${minutes}`;\n}\n\nfunction formatDay(date) {\n  const dayArray = date.getDay();\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  const day = days[dayArray];\n  return day;\n}\n// getting current time & day and displaying it\nconst currentTime = document.querySelector(\"#current-time\");\nlet newCurrentTime = new Date();\ncurrentTime.innerHTML = formatTime(newCurrentTime);\n\nconst currentDay = document.querySelector(\"#current-day\");\nlet newCurrentDay = new Date();\ncurrentDay.innerHTML = formatDay(newCurrentDay);\n\n// implementing search bar and api request\nfunction displayWeatherInfo(response) {\n  document.querySelector(\"#searched-city\").innerHTML = response.data.name;\n  const temperature = Math.round(response.data.main.temp);\n  document.querySelector(\"#current-temperature\").innerHTML = `${temperature}°`;\n  const humidity = response.data.main.humidity;\n  document.querySelector(\"#humidity\").innerHTML = `${humidity}%`;\n  const windSpeed = Math.round(response.data.wind.speed);\n  document.querySelector(\"#wind\").innerHTML = `${windSpeed}km/h`;\n  document.querySelector(\"#weather-type\").innerHTML =\n    response.data.weather[0].main;\n}\n\nfunction searchCity(city) {\n  const apiKey = \"2b5fc755ac2ec59250868b5527df31c4\";\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric`;\n  axios.get(`${apiUrl}&appid=${apiKey}`).then(displayWeatherInfo);\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let city = document.querySelector(\"#search-input\").value;\n  searchCity(city);\n}\n\nconst searchBar = document.querySelector(\"#search-form\");\nsearchBar.addEventListener(\"submit\", handleSubmit);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}